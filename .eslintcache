[{"/home/raxraj/projects/todo-frontend/src/reportWebVitals.js":"1","/home/raxraj/projects/todo-frontend/src/index.js":"2","/home/raxraj/projects/todo-frontend/src/App.js":"3","/home/raxraj/projects/todo-frontend/src/Navbar/Navbar.js":"4","/home/raxraj/projects/todo-frontend/src/Home/Home.js":"5","/home/raxraj/projects/todo-frontend/src/Login/Login.js":"6","/home/raxraj/projects/todo-frontend/src/Login/Signup.js":"7","/home/raxraj/projects/todo-frontend/src/Dashboard/Dashboard.js":"8"},{"size":362,"mtime":1609249001394,"results":"9","hashOfConfig":"10"},{"size":221,"mtime":1609249955378,"results":"11","hashOfConfig":"12"},{"size":499,"mtime":1610376342956,"results":"13","hashOfConfig":"12"},{"size":534,"mtime":1609313445216,"results":"14","hashOfConfig":"12"},{"size":620,"mtime":1609252307790,"results":"15","hashOfConfig":"12"},{"size":2001,"mtime":1610454532225,"results":"16","hashOfConfig":"12"},{"size":2848,"mtime":1610112718059,"results":"17","hashOfConfig":"12"},{"size":2562,"mtime":1610456278758,"results":"18","hashOfConfig":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oj8hnp",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nm2wv5",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/raxraj/projects/todo-frontend/src/reportWebVitals.js",[],"/home/raxraj/projects/todo-frontend/src/index.js",[],"/home/raxraj/projects/todo-frontend/src/App.js",[],["37","38"],"/home/raxraj/projects/todo-frontend/src/Navbar/Navbar.js",[],"/home/raxraj/projects/todo-frontend/src/Home/Home.js",[],"/home/raxraj/projects/todo-frontend/src/Login/Login.js",[],"/home/raxraj/projects/todo-frontend/src/Login/Signup.js",["39","40"],"import './Login.css'\nimport { Link } from \"@reach/router\";\nimport { useState } from 'react';\nimport axios from 'axios';\nconst SignUp = () => {\n    const [fullName, setFullName] = useState('')\n    const [userName, setUserName] = useState('')\n    const [password, setPassword] = useState('')\n    const [message, setMessage] = useState('')\n    let registeredUser = () => {\n        axios.post('http://127.0.0.1:5500/register',\n            {\n                fullName: fullName,\n                userName: userName,\n                password: password\n            })\n            .then((response) => {\n                if (response.data.done) {\n                    /*\n                        this.setState({fullName: '', userName: '', password:'', message:'Registere'})\n                    */\n                    setFullName(\"\")\n                    setUserName('')\n                    setPassword('')\n                    setMessage(\"Successfully Registered!\")\n                }\n                else{\n                    if(response.data.message == 'userName'){\n                        setMessage('username is invalid')\n                    }\n                    else if(response.data.message == 'fullName'){\n                        setMessage('fullname should be atleast 3 characters long and atmost 20 char')\n                    }\n                    else{\n                        setMessage('password is invalid')\n                    }\n                }\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n    return (\n        <div className=\"center\">\n            <h1>Register</h1>\n            <form>\n                <h3>{message}</h3>\n                <div className=\"text_field\">\n                    <input id=\"fullName\" type=\"text\" placeholder=\"FullName\"\n                        value={fullName}\n                        onChange={(event) => setFullName(event.target.value)}\n                    />\n                </div>\n                <div className=\"text_field\">\n                    <input id=\"userName\" type=\"text\" placeholder=\"Username\"\n                        value={userName}\n                        onChange={(event) => setUserName(event.target.value)}\n                    />\n                </div>\n                <div className=\"text_field\">\n                    <input id=\"password\" type=\"password\" placeholder=\"Password\"\n                        value={password}\n                        onChange={(event) => setPassword(event.target.value)}\n                    />\n\n                </div>\n                <br />\n            </form>\n            <button class='login-register-btn' onClick={registeredUser}> Register</button>\n            <div className=\"signup_link\">\n                Already a member? <Link to='/login'>Login</Link>\n            </div>\n        </div>\n    );\n}\n\nexport default SignUp;","/home/raxraj/projects/todo-frontend/src/Dashboard/Dashboard.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":28,"column":46,"nodeType":"47","messageId":"48","endLine":28,"endColumn":48},{"ruleId":"45","severity":1,"message":"46","line":31,"column":51,"nodeType":"47","messageId":"48","endLine":31,"endColumn":53},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]